;; Object semanticdb-project-database-file
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semanticdb-project-database-file"
  :tables
  (list
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("boost/asio.hpp" include (:system-flag t) nil [296 321])
            ("boost/bind.hpp" include (:system-flag t) nil [322 347])
            ("boost/enable_shared_from_this.hpp" include (:system-flag t) nil [348 392])
            ("boost/shared_ptr.hpp" include (:system-flag t) nil [393 424])
            ("iostream" include (:system-flag t) nil [425 444])
            ("vector" include (:system-flag t) nil [445 462])
            ("boost::asio::ip::tcp" using (:type ("boost::asio::ip::tcp" type
                 (:prototype t
                  :type "class")
                  nil nil)) nil [464 491])
            ("shared_const_buffer" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [573 580])
                    ("shared_const_buffer" function
                       (:constructor-flag t
                        :arguments 
                          ( ("data" variable
                               (:reference 1
                                :constant-flag t
                                :type ("std::string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [647 671]))                          
                        :type ("shared_const_buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [627 784])
                    ("value_type" type
                       (:typedef ("boost::asio::const_buffer" type (:type "class") nil nil)
                        :type "typedef")
                        (reparse-symbol classsubparts) [841 886])
                    ("const_iterator" type
                       (:typedef ("boost::asio::const_buffer" type (:type "class") nil nil)
                        :pointer 1
                        :type "typedef")
                        (reparse-symbol classsubparts) [889 945])
                    ("begin" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :type ("boost::asio::const_buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [948 1015])
                    ("end" function
                       (:methodconst-flag t
                        :pointer 1
                        :constant-flag t
                        :type ("boost::asio::const_buffer" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1018 1087])
                    ("private" label nil (reparse-symbol classsubparts) [1089 1097])
                    ("data_" variable (:type ("boost::shared_ptr" type
                         (:template-specifier 
                            ( ("std::vector" type (:template-specifier 
                                ( ("char" type nil nil nil))                                ) nil nil))                            
                          :type "class")
                          nil nil)) (reparse-symbol classsubparts) [1100 1144])
                    ("buffer_" variable (:type ("boost::asio::const_buffer" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1147 1181]))                  
                :type "class")
                nil [545 1184])
            ("session" type
               (:superclasses 
                  ( ("boost::enable_shared_from_this" type
                       (:protection "public"
                        :type "class")
                        nil nil))                  
                :members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1253 1260])
                    ("session" function
                       (:constructor-flag t
                        :arguments 
                          ( ("io_service" variable
                               (:reference 1
                                :type ("boost::asio::io_service" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1271 1307]))                          
                        :type ("session" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1263 1341])
                    ("socket" function (:type ("tcp::socket" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1345 1394])
                    ("start" function (:type "void") (reparse-symbol classsubparts) [1398 1657])
                    ("handle_write" function (:type "void") (reparse-symbol classsubparts) [1661 1688])
                    ("private" label nil (reparse-symbol classsubparts) [1690 1698])
                    ("socket_" variable (:type ("tcp::socket" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1754 1774]))                  
                :type "class")
                nil [1186 1777])
            ("session_ptr" type
               (:typedef ("boost::shared_ptr" type
                     (:template-specifier 
                        ( ("session" type nil nil nil))                        
                      :type "class")
                      nil nil)
                :type "typedef")
                nil [1779 1826])
            ("server" type
               (:members 
                  ( ("public" label nil (reparse-symbol classsubparts) [1843 1850])
                    ("server" function
                       (:constructor-flag t
                        :arguments 
                          ( ("io_service" variable
                               (:reference 1
                                :type ("boost::asio::io_service" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1860 1896])
                            ("port" variable (:type "short") (reparse-symbol arg-sub-list) [1897 1908]))                          
                        :type ("server" type (:type "class") nil nil))
                        (reparse-symbol classsubparts) [1853 2221])
                    ("handle_accept" function
                       (:arguments 
                          ( ("new_session" variable (:type ("session_ptr" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [2244 2268])
                            ("error" variable
                               (:reference 1
                                :constant-flag t
                                :type ("boost::system::error_code" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [2275 2314]))                          
                        :type "void")
                        (reparse-symbol classsubparts) [2225 2587])
                    ("private" label nil (reparse-symbol classsubparts) [2589 2597])
                    ("io_service_" variable (:type ("boost::asio::io_service" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2600 2637])
                    ("acceptor_" variable (:type ("tcp::acceptor" type (:type "class") nil nil)) (reparse-symbol classsubparts) [2640 2664]))                  
                :type "class")
                nil [1828 2667])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [2678 2687])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [2688 2701]))                  
                :type "int")
                nil [2669 3067]))          
      :file "boosttest.cpp"
      :pointmax 3068
      :fsize 3067
      :lastmodtime '(22998 19437 0 0)
      :unmatched-syntax '((EXPLICIT 618 . 626) (EXPLICIT 618 . 626) (EXPLICIT 618 . 626) (EXPLICIT 618 . 626) (semantic-list 1040 . 1643) (punctuation 1038 . 1039) (symbol 1031 . 1038) (punctuation 1030 . 1031) (symbol 1007 . 1030) (punctuation 1006 . 1007) (punctuation 1005 . 1006) (symbol 1000 . 1005) (PUBLIC 993 . 999) (punctuation 991 . 992) (symbol 978 . 986) (CLASS 972 . 977) (EXPLICIT 378 . 386) (semantic-list 1040 . 1619) (punctuation 1038 . 1039) (symbol 1031 . 1038) (punctuation 1030 . 1031) (symbol 1007 . 1030) (punctuation 1006 . 1007) (punctuation 1005 . 1006) (symbol 1000 . 1005) (PUBLIC 993 . 999) (punctuation 991 . 992) (symbol 978 . 986) (CLASS 972 . 977) (EXPLICIT 378 . 386) (semantic-list 1040 . 1595) (punctuation 1038 . 1039) (symbol 1031 . 1038) (punctuation 1030 . 1031) (symbol 1007 . 1030) (punctuation 1006 . 1007) (punctuation 1005 . 1006) (symbol 1000 . 1005) (PUBLIC 993 . 999) (punctuation 991 . 992) (symbol 978 . 986) (CLASS 972 . 977) (EXPLICIT 378 . 386) (semantic-list 1040 . 1313) (punctuation 1038 . 1039) (symbol 1031 . 1038) (punctuation 1030 . 1031) (symbol 1007 . 1030) (punctuation 1006 . 1007) (punctuation 1005 . 1006) (symbol 1000 . 1005) (PUBLIC 993 . 999) (punctuation 991 . 992) (symbol 978 . 986) (CLASS 972 . 977) (EXPLICIT 378 . 386) (semantic-list 1040 . 1301) (punctuation 1038 . 1039) (symbol 1031 . 1038) (punctuation 1030 . 1031) (symbol 1007 . 1030) (punctuation 1006 . 1007) (punctuation 1005 . 1006) (symbol 1000 . 1005) (PUBLIC 993 . 999) (punctuation 991 . 992) (symbol 978 . 986) (CLASS 972 . 977) (EXPLICIT 378 . 386) (semantic-list 329 . 610) (symbol 309 . 328) (CLASS 303 . 308) (EXPLICIT 378 . 386) (EXPLICIT 378 . 386) (semantic-list 329 . 595) (symbol 309 . 328) (CLASS 303 . 308) (EXPLICIT 378 . 386) (EXPLICIT 378 . 386) (semantic-list 329 . 563) (symbol 309 . 328) (CLASS 303 . 308) (EXPLICIT 378 . 386) (EXPLICIT 378 . 386) (semantic-list 329 . 577) (symbol 309 . 328) (CLASS 303 . 308) (EXPLICIT 378 . 386) (EXPLICIT 378 . 386) (semantic-list 329 . 554) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 513 . 542) (symbol 506 . 513) (semantic-list 533 . 541) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 513 . 542) (symbol 506 . 513) (semantic-list 533 . 541) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 536) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 513 . 534) (symbol 506 . 513) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 513 . 534) (symbol 506 . 513) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 528) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 513 . 526) (symbol 506 . 513) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 513 . 526) (symbol 506 . 513) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 525) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 513 . 523) (symbol 506 . 513) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 513 . 523) (symbol 506 . 513) (punctuation 495 . 496) (semantic-list 446 . 495) (symbol 441 . 446) (semantic-list 468 . 494) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 495) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 493) (symbol 441 . 446) (semantic-list 468 . 492) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 493) (symbol 441 . 446) (semantic-list 468 . 492) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 494) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 492) (symbol 441 . 446) (semantic-list 468 . 491) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 492) (symbol 441 . 446) (semantic-list 468 . 491) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 483) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 481) (symbol 441 . 446) (semantic-list 468 . 480) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 481) (symbol 441 . 446) (semantic-list 468 . 480) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 479) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 477) (symbol 441 . 446) (semantic-list 468 . 476) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 477) (symbol 441 . 446) (semantic-list 468 . 476) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 478) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 476) (symbol 441 . 446) (semantic-list 468 . 475) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 476) (symbol 441 . 446) (semantic-list 468 . 475) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 465) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 463) (symbol 441 . 446) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 463) (symbol 441 . 446) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 459) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 457) (symbol 441 . 446) (punctuation 455 . 456) (punctuation 454 . 455) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 457) (symbol 441 . 446) (punctuation 455 . 456) (punctuation 454 . 455) (NEW 447 . 450) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 450) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 446 . 448) (symbol 441 . 446) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 446 . 448) (symbol 441 . 446) (punctuation 440 . 441) (semantic-list 406 . 431) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 428) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 406 . 426) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 406 . 426) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 427) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 406 . 425) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 406 . 425) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 329 . 427) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 406 . 425) (symbol 387 . 406) (EXPLICIT 378 . 386) (semantic-list 406 . 425) (symbol 387 . 406) (EXPLICIT 378 . 386) (symbol 309 . 328) (CLASS 303 . 308) (symbol 378 . 379) (symbol 378 . 379) (semantic-list 329 . 375) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 329 . 374) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 329 . 361) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 329 . 360) (symbol 309 . 328) (CLASS 303 . 308) (semantic-list 329 . 340) (symbol 309 . 328) (CLASS 303 . 308) (symbol 309 . 328) (CLASS 303 . 308) (symbol 309 . 322) (CLASS 303 . 308) (symbol 309 . 319) (CLASS 303 . 308) (symbol 309 . 315) (CLASS 303 . 308)))
    (semanticdb-table "semanticdb-table"
      :major-mode c++-mode
      :tags 
        '( ("iostream" include (:system-flag t) nil [1 20])
            ("string" include nil nil [21 38])
            ("boost/regex.hpp" include (:system-flag t) nil [39 65])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [67 87])
            ("boost" using (:type ("boost" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [88 110])
            ("main" function
               (:arguments 
                  ( ("argc" variable (:type "int") (reparse-symbol arg-sub-list) [121 130])
                    ("argv" variable
                       (:pointer 1
                        :dereference 1
                        :type "char")
                        (reparse-symbol arg-sub-list) [131 148]))                  
                :type "int")
                nil [112 196]))          
      :file "regex.cpp"
      :pointmax 198
      :unmatched-syntax nil))
  :file "!Users!samuellough!Documents!CPP!BOOST_PLAY!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
